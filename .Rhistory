library("dplyr")
library("Seurat")
library("patchwork")
library("Matrix")
library("readr")
library("ggplot2")
library("dittoSeq")
dittoBarPlot(seurat_obj, var = "Condition", group.by = "ident", scale = "percent", var.labels.reorder	= c(1, 2, 3), colors = c(1,2,3)) + geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
View(seurat_obj)
table(seurat_obj@meta.data$Condition)
# [1] "data.frame"
seurat_obj$Dataset_w_Condition <- paste0(seurat_obj$Dataset,"_",seurat_obj$Condition)
table(seurat_obj@meta.data$Dataset_w_Condition)
dittoBarPlot(seurat_obj, var = c("Dataset_w_Condition"), group.by = "ident", scale = "percent") + geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
View(seurat_obj)
seurat_obj@meta.data[["DiseaseStudy"]]
seurat_obj$DiseaseStudy <- ifelse(
seurat_obj$Dataset == 'AD_Mathys', "AD", "MS"
)
seurat_obj$DiseaseStudy <- paste0(seurat_obj$Condition, '_', seurat_obj$Dataset),
table(seurat_obj$DiseaseStudy)
table(seurat_obj$DiseaseStudy)
seurat_obj$DiseaseStudy_w_Condition <- paste0(seurat_obj$DiseaseStudy,"_",seurat_obj$Condition)
table(seurat_obj@meta.data$DiseaseStudy_w_Condition)
dittoBarPlot(seurat_obj, var = c("DiseaseStudy_w_Condition"), group.by = "ident", scale = "percent") + geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
table(seurat_obj@meta.data$ident)
table(seurat_obj$ident)
table(seurat_obj$active.ident)
table(seurat_obj@meta.data[["orig.ident.1"]])
tabel(seurat_obj@active.ident)
table(seurat_obj@active.ident)
dittoBarPlot(seurat_obj, var = "Condition", group.by = "active.ident", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
seurat_obj@meta.data[["orig.ident.1"]]
seurat_obj@meta.data[["broad.cell.type"]]
table(seurat_obj@meta.data$broad.cell.type)
table(seurat_obj@meta.data$ident)
table(seurat_obj@active.ident)
seurat_obj@meta.data$broad.cell.type <- seurat_obj@active.ident
table(seurat_obj@meta.data$broad.cell.type)
View(seurat_obj)
dittoBarPlot(seurat_obj, var = "Condition", group.by = "broad.cell.type", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
cell_meta <- seurat_obj@meta.data
variable <- 'Condition'
cluster_var <- "broad.cell.type"
clusters <- unique(cell_meta[[cluster_var]])
df <- data.frame()
for(i in 1:length(clusters)){
cur_df <- table(cell_meta[cell_meta[[cluster_var]]==clusters[i],variable])
# normalize and scale the number of cells based on group (ie batch or sample or sex etc)
cur_df <- as.data.frame(cur_df / table(cell_meta[[variable]])[names(cur_df)])
cur_df$Freq <- cur_df$Freq * 1/(sum(cur_df$Freq))
cur_df$cluster <- clusters[i]
df <- rbind(df, cur_df)
}
p <- ggplot(df, aes(y=Freq, x=cluster, fill=Var1)) +
geom_bar(stat='identity') +
scale_y_continuous(expand = c(0,0)) +
#  scale_fill_manual(values=sex_colors) +
theme(
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.text.x = element_text(angle=45, hjust=1),
axis.title.x = element_blank(),
legend.title = element_blank(),
axis.line.y = element_blank(),
axis.line.x = element_blank(),
legend.position='bottom'
)
p
cluster_annotations <- list(
'0' = 'ODC',
'1' = 'EX',
'2' = 'ODC',
'3' = 'ODC',
'4' = 'ASC',
'5' = 'EX',
'6' = 'Doublet', # ASC / Neuron / ODC markers all present,
'7' = 'MG',
'8' = 'OPC',
'9' = 'EX',
'10' = 'INH',
'11' = 'EX',
'12' = 'INH',
'13' = 'EX',
'14' = 'EX',
'15' = 'INH',
'16' = 'Doublet', # ASC / ODC markers present
'17' = 'ASC',
'18' = 'INH',
'19' = 'EX',
'20' = 'EX',
'21' = 'EX',
'22' = 'EX',
'23' = 'PER/END',
'24' = 'ASC',
'25' = 'INH',
'26' = 'MG',
'27' = 'EX'
)
View(cluster_annotations)
?unlist
seurat_obj@meta.data[["broad.cell.type"]]
seurat_obj@active.ident
class(cluster_annotations)
unlist(cluster_annotations)
seurat_obj@meta.data[["seurat_clusters"]]
seurat_obj@meta.data[["TAG"]]
table(seurat_obj@meta.data$pre.cluster)
table(seurat_obj@meta.data$TAG)
table(seurat_obj@active.ident)
library("dplyr")
library("Seurat")
#local_directory
in_data_dir <- "/Users/zetristanshi/Desktop/Rotation_Project/Spring2021_Rotation_Project/Data/for_ze/Data_output/"
#reading Seurat Object (before and after liger correction)
seurat_obj<-readRDS(paste0(in_data_dir, "MS_AD_SeuratObject_clusters_DiseaseStudy_w_Condition.rds"))
in_data_dir <- "/Users/zetristanshi/Desktop/Rotation_Project/Spring2021_Rotation_Project/Data/for_ze/Data_output/"
seurat_obj<-readRDS(paste0(in_data_dir, "MS_AD_SeuratObject_liger_with_clusternames.rds"))
View(seurat_obj)
table(seurat_obj@active.ident)
head(seurat_obj@active.ident)
head(seurat_obj$CellType)
table(seurat_obj$seurat_clusters)
seurat_obj@active.ident <- seurat_obj$seurat_clusters
View(seurat_obj)
head(seurat_obj@active.ident)
getwd()
seurat_obj$CellType_cluster2 <- paste0(seurat_obj$CellType, '-', seurat_obj$seurat_clusters)
View(seurat_obj)
seurat_obj$CellType_cluster2 <- paste0(seurat_obj$CellType, '-', seurat_obj@active.ident)
View(seurat_obj)
seurat_obj@meta.data[["CellType_cluster2"]]
seurat_obj@meta.data[["CellType_cluster"]]
DimPlot(seurat_obj, label = TRUE)
library("dplyr")
library("Seurat")
library("patchwork")
library("Matrix")
library("readr")
library("ggplot2")
DimPlot(seurat_obj, label = TRUE)
?DimPlot
DimPlot(seurat_obj, split.by='Condition', label=TRUE) + theme(plot.title = element_text(hjust = 0.5))
dittoBarPlot(seurat_obj, var = "Condition", group.by = "ident", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
library("dittoSeq")
dittoBarPlot(seurat_obj, var = "Condition", group.by = "ident", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
?dittoBarPlot
dittoBarPlot(seurat_obj, var = "CellType_cluster", group.by = "Condition", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
dittoBarPlot(seurat_obj, var = "CellType", group.by = "Condition", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
table(seurat_obj$DiseaseStudy)
table(seurat_obj$DiseaseStudy_w_Condition)
dittoBarPlot(seurat_obj, var = "CellType", group.by = "DiseaseStudy_w_Condition", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
table(seurat_obj$stage)
table(seurat_obj$Dataset[[seurat_obj$stage == "Control"]])
seurat_obj2<-seurat_obj$stage == "Chronic inactive"
head(seurat_obj2)
seurat_obj2<-seurat_obj$stage["Chronic inactive"]
dittoBarPlot(seurat_obj, var = "CellType_cluster", group.by = "DiseaseStudy_w_Condition", scale = "percent")+geom_text(aes(label = round(percent,2)), position = position_stack(vjust = 0.5))
cluster_separating_markers <- c("SNAP25","GABRB2","SYT1","SLC17A7","CAMK2A","GAD1","GAD2","PLP1","CNP","MBP","PDGFRA","SOX6","BCAN","OLIG2","RTN4","GJA1","AQP4","GFAP","CD74","CD68","P2RY12","CSF1R","PDGFRB","CLDN5","ICAM2","FLT1")
plot_list = list()
for (i in cluster_separating_markers){
p <- VlnPlot(object = seurat_obj, features = i , pt.size = 0) + geom_boxplot(alpha=0.7, width=0.2, fill="white") + theme(legend.position = "none")#+ theme(axis.text.x = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.ticks.x = element_blank())
plot_list[[i]] = p
}
library("cowplot")
cowplot::plot_grid(plotlist=plot_list, ncol=2)
ls(seurat_obj@commands)
?geom_boxplot
# Install ArchR and Signac package in the anacoda env
devtools::install_github("GreenleafLab/ArchR", ref="master", repos = BiocManager::repositories())
#Lastly, install all of the ArchR dependencies that arent installed by default:
library(ArchR)
ArchR::installExtraPackages()
#Lastly, install all of the ArchR dependencies that arent installed by default:
library(ArchR)
library(ArchR)
set.seed(1)
library(ArchR)
addArchRThreads(threads = 16)
# ArchR package
devtools::install_github("GreenleafLab/ArchR", ref="master", repos = BiocManager::repositories())
library(ArchR)
#install.packages("SeuratData")
library(SeuratData)
install.packages("SeuratData")
InstallData("panc8")
devtools::install_github('satijalab/seurat-data')
library(SeuratData)
InstallData("panc8")
data("panc8")
force(panc8)
gc()
data("panc8")
pancreas.list <- SplitObject(panc8, split.by = "tech")
View(panc8)
View(panc8)
View(pancreas.list)
data("panc8")
force(panc8)
View(panc8)
gc()
data("panc8")
pancreas.list <- SplitObject(panc8, split.by = "tech")
library(Seurat)
#devtools::install_github('satijalab/seurat-data')
library(SeuratData)
data("panc8")
pancreas.list <- SplitObject(panc8, split.by = "tech")
View(pancreas.list)
pancreas.list <- pancreas.list[c("celseq", "celseq2", "fluidigmc1", "smartseq2")]
for (i in 1:length(pancreas.list)) {
pancreas.list[[i]] <- NormalizeData(pancreas.list[[i]], verbose = FALSE)
pancreas.list[[i]] <- FindVariableFeatures(pancreas.list[[i]], selection.method = "vst", nfeatures = 2000,
verbose = FALSE)
}
###
seurat_rna <- readRDS("/Users/zetristanshi/Desktop/NucSeq_final.rds")
View(seurat_rna)
#########################################################################################################
#########################################################################################################
#########################################################################################################
library(ggplot2)
library(Seurat)
NucSeq <- readRDS("/Users/zetristanshi/Desktop/NucSeq_final.rds")
View(NucSeq)
table(Idents(NucSeq))
table(NucSeq$Assigned.Clusters)
head(NucSeq$Assigned.Clusters)
head(Idents(NucSeq))
cluster_annotations <- list(
"ASC1" = "Astrocyte",
"ASC2" = "Astrocyte",
"CB.Granule" = "Excitatory_Neuron",
"CTX.Pyramidal.NeuronsL5_L6" = "Excitatory_Neuron",
"Ependymal.Cells" = "Ependymal.Cells",
"EX1" = "Excitatory_Neuron",
"EX2" = "Excitatory_Neuron",
"Hippo.Pyramidal.Neurons" = "Excitatory_Neuron",
"IMM.OL" = "IMM.OL",
"Medium.Spiny.Neurons" = "Inhibitory_Neuron",
"MG1" = "Microglia",
"MG2" = "Microglia",
"MG3" = "Microglia",
"Mig.Interneurons1" = "Inhibitory_Neuron",
"Mig.Interneurons2" = "Inhibitory_Neuron",
"OL1" = "Oligo",
"OL2" = "Oligo",
"OPC" = "Oligo",
"PER.END" = "PER.END",
"unknown" = "unknown",
"VLMC" = "VLMC"
)
View(cluster_annotations)
View(cluster_annotations)
seurat_rna <- NucSeq
seurat_rna$regroup_Cellclusters <- unlist(cluster_annotations[seurat_rna$regroup_Cellclusters])
seurat_rna$regroup_Cellclusters <- unlist(cluster_annotations[seurat_rna$Assigned.Clusters])
View(seurat_rna)
head(seurat_rna$Assigned.Clusters)
head(seurat_rna$regroup_Cellclusters)
tail(seurat_rna$Assigned.Clusters)
tail(seurat_rna$regroup_Cellclusters)
Version(BiocManager)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
BiocManager::install(version = "3.12")
### Now, install monocle3 through the cole-trapnell-lab GitHub, execute:
install.packages("devtools")
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/monocle3')
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/monocle3')
library(Seurat)
in_data_dir < '/Users/zetristanshi/Desktop/'
in_data_dir <- '/Users/zetristanshi/Desktop/'
Zhang_data <- readRDS(paste0(in_data_dir, "mydata4.rds"))
View(Zhang_data)
head(Zhang_data@meta.data)
Zhang_data@meta.data
table(colnames(Zhang_data))
sum(colnames(Zhang_data))
sum((Zhang_data))
View(NucSeq)
table
table(Zhang_data@active.ident)
Zhang_data@assays[["RNA"]]@counts@Dimnames[[1]]
df <- cbind(colnames(Zhang_data@meta.data), Zhang_data$nFeature_RNA)
View(df)
df <- Zhang_data@meta.data
View(df)
df <- Zhang_data@meta.data %>%
mutate(cell = colnames(Zhang_data@meta.data)) %>%
select(cell, nFeature_RNA)
library(dplyr)
df <- Zhang_data@meta.data %>%
mutate(cell = colnames(Zhang_data@meta.data)) %>%
select(cell, nFeature_RNA)
df <- Zhang_data@meta.data %>%
mutate(cell = ronames(Zhang_data@meta.data)) %>%
select(cell, nFeature_RNA)
df <- Zhang_data@meta.data %>%
mutate(cell = rownames(Zhang_data@meta.data)) %>%
select(cell, nFeature_RNA)
View(df)
rm(Zhang_data)
rm(df)
rm(in_data_dir)
data <- Read10X(data.dir = "/Users/zetristanshi/Desktop/raw_feature_bc_matrix/")
library(dplyr)
library(Seurat)
data <- Read10X(data.dir = "/Users/zetristanshi/Desktop/raw_feature_bc_matrix/")
# Initialize the Seurat object with the raw (non-normalized data).
Seuratdata <- CreateSeuratObject(counts = data, project = "Seurat", min.cells = 3, min.features = 200)
View(Seuratdata)
head(Seuratdata@meta.data)
head(Seuratdata)
View(Seuratdata)
library(readr)
SraRunTable <- read_delim("Desktop/SraRunTable.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(SraRunTable)
install.packages?
?
)
?install.packages
install.packages
libPaths(install.packages)
10146-10433
565204-565404
973840-977754
994056-995654
getwd()
launchCerebro(
version = "v1.3",
crb_file_to_load = "/Users/zetristanshi/Desktop/cerebro_ALS_seurat_2022-01-16.crb",
mode = "closed"
)
library(cerebroApp)
launchCerebro(
version = "v1.3",
crb_file_to_load = "/Users/zetristanshi/Desktop/cerebro_ALS_seurat_2022-01-16.crb",
mode = "closed"
)
launchPATH <- "/Users/zetristanshi/Desktop/"
launchCerebro(
version = "v1.3",
crb_file_to_load = path0(launchPATH, "cerebro_ALS_seurat_2022-01-16.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_ALS_seurat_2022-01-16.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_ALS_seurat_2022-01-16.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_ALS_seurat_2022-01-16.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_ALS_seurat_2022-01-16.crb"),
mode = "closed"
)
library(dplyr)
library(Seurat)
library(SingleR)
library(monocle)
library(cerebroApp)
launchPATH <- "/Users/zetristanshi/Desktop/"
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-21.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-21.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-21.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-21.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-21.crb"),
mode = "closed"
)
launchPATH <- "/Users/zetristanshi/Desktop/"
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-23.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-23.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-23.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-23_test.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-23_test.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-23_test.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-23.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-24.crb"),
mode = "closed"
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-24.crb"),
mode = "closed"
)
custom_welcome_message <- '<h3 style="text-align: center; margin-top: 0px"><strong> Welcome to ALS Project </strong></h3>
<p style="margin-left: 10px;"> Welcome to the snRNAseq-c9FTD Project <em>et al.</em>.<br>
It contains the single nuclues transcriptomic profiles of samples taken from postmortem brains. <br>
Please contact us at https://faculty.sites.uci.edu/thompsonlab/ if you have any questions.</p>'
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_ALS_seurat_2022-01-24.crb"),
mode = "closed",
welcome_message = custom_welcome_message
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-24.crb"),
mode = "closed",
welcome_message = custom_welcome_message
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-24.crb"),
mode = "closed",
welcome_message = custom_welcome_message
)
launchCerebro(
version = "v1.3",
crb_file_to_load = paste0(launchPATH, "cerebro_snRNAseq_c9FTD_seurat_2022-01-24.crb"),
mode = "closed",
welcome_message = custom_welcome_message
)
shiny::runApp('Desktop')
library(EnsDb.Hsapiens.v86)
BiocManager::install("EnsDb.Hsapiens.v86")
library(EnsDb.Hsapiens.v86)
annotations <- GetGRangesFromEnsDb(ensdb =  EnsDb.Hsapiens.v86)
#BiocManager::install("EnsDb.Hsapiens.v86")
library(Seurat)
annotations <- GetGRangesFromEnsDb(ensdb =  EnsDb.Hsapiens.v86)
library(Signac)
annotations <- GetGRangesFromEnsDb(ensdb =  EnsDb.Hsapiens.v86)
View(annotations)
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
sessionInfo()
library(WGCNA)
usethis::create_github_token()
devtools::install_github('swaruplabUCI/ArchRtoSignac')
devtools::install_github('swaruplabUCI/ArchRtoSignac')
remove.packages("ArchRtoSignac")
devtools::install_github('swaruplabUCI/ArchRtoSignac')
setwd("/Users/zetristanshi/Google Drive/Shared drives/Bioinfo_SwarupLab/Ze_SHI_ProjectBox/Project/STAR_Project_2022/Code/Github/ArchRtoSignac/")
devtools::document()
devtools::install_github('swaruplabUCI/ArchRtoSignac')
library(ArchRtoSignac)
library(ArchRtoSignac)
?loadingpackages
ArchRtoSignac
?ArchRtoSignac
help(ArchRtoSignac)
help(ArchR2Signac)
??ArchRtoSignac
library(ArchRtoSignac)
?getGeneScoreMatrix
